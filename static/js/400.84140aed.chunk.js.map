{"version":3,"file":"static/js/400.84140aed.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","components/Profile/MyPosts/Status.module.css","components/Profile/MyPosts/ProfileStatusWithHooks.tsx","components/Profile/ProfileDataForm.tsx","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@mui/icons-material/AddAPhoto.js","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"Profile_descriptionBlock__T0wfu\",\"profileDataForm\":\"Profile_profileDataForm__bm2rq\",\"button\":\"Profile_button__j9zEN\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusBlock\":\"Status_statusBlock__RZ59U\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport s from './Status.module.css'\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n\r\ntype StatusType = {\r\n    status: string\r\n    updateStatus: (userId: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props: StatusType) => {\r\n\r\n    const [editeMode, setEditeMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        if(props.isOwner) {\r\n            setEditeMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditeMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editeMode &&\r\n                <div className={s.statusBlock}><b>Status : </b>\r\n                    <span onDoubleClick={activateMode}>{props.status || '------'}</span>\r\n                    {props.isOwner ? <EditIcon onClick={activateMode} fontSize={'small'} color=\"primary\"/> : null}\r\n                </div>\r\n            }\r\n            {editeMode &&\r\n                <div>\r\n                    <TextField variant=\"outlined\"\r\n                               onChange={onStatusChange}\r\n                               onBlur={deactivateMode}\r\n                               autoFocus={true}\r\n                               value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../src/components/common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../src/utils/validators/valodators\";\r\nimport {ContactsType} from \"../../../src/redux/profile-reducer\";\r\nimport {useAppSelector} from \"../../../src/redux/redux-store\";\r\nimport style from \"../../../src/components/common/FormsControls/FormControl.module.css\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nexport type FormProfileDataType = {\r\n    fullName: string;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    aboutMe: string;\r\n    contacts?: ContactsType | null | undefined\r\n};\r\n\r\nexport interface RenderFieldProps {\r\n    input: any;\r\n    label: string;\r\n    type: string;\r\n}\r\n\r\nexport const renderField: React.FC<RenderFieldProps> = ({input, label, type}) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <TextField {...input} type={type} variant=\"outlined\"/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nexport const ProfileDataForm: React.FC<InjectedFormProps<FormProfileDataType>> = (props) => {\r\n    const {handleSubmit, error} = props;\r\n\r\n    const profile = useAppSelector(state => state.profilePage.profile)\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={style.forms}>\r\n                <div className={style.form}>\r\n                    <b>Name </b>\r\n                    <Field\r\n                        name={'fullName'}\r\n                        placeholder={'fullName'}\r\n                        defaultValue={profile?.fullName}\r\n                        component={renderField}\r\n                        validate={[required]}\r\n                    />\r\n                </div>\r\n                <div className={style.form}>\r\n                    <b>Looking for a Job </b>\r\n                    <Field\r\n                        name={'lookingForAJob'}\r\n                        placeholder={'lookingForAJob'}\r\n                        component={Input}\r\n                        type='checkbox'\r\n                    />\r\n                </div>\r\n                <div className={style.form}>\r\n                    <b>My professional skills</b>\r\n                    <Field\r\n                        name={'lookingForAJobDescription'}\r\n                        placeholder={'lookingForAJobDescription'}\r\n                        component={renderField}\r\n\r\n                    />\r\n                </div>\r\n                <div className={style.form}>\r\n                    <b>About me</b>\r\n                    <Field\r\n                        name={'aboutMe'}\r\n                        placeholder={'aboutMe'}\r\n                        component={renderField}\r\n                    />\r\n                </div>\r\n                <div className={style.form}>\r\n                    <b>Contacts</b>\r\n                    <div className={style.contacts}>\r\n                        {profile?.contacts && Object.keys(profile.contacts).map(key => {\r\n                            return (\r\n                                <div className={style.contact} key={key}>\r\n                                    {key}: <Field\r\n                                    name={'contacts.' + key}\r\n                                    placeholder={key}\r\n                                    component={renderField}\r\n                                />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div className={style.buttonSubmit}>\r\n                    <Button type=\"submit\" color={\"success\"} variant=\"contained\">Save</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const ProfileReduxForm = reduxForm<FormProfileDataType>({\r\n    form: 'edit-profile',\r\n})(ProfileDataForm);\r\n\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\nimport {PostsType, ProfileType} from \"../../redux/profile-reducer\";\r\nimport userPhoto from '../../assets/images/UserIcon.png'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ProfileStatusWithHooks from \"../../../src/components/Profile/MyPosts/ProfileStatusWithHooks\";\r\nimport {FormProfileDataType, ProfileReduxForm} from \"./ProfileDataForm\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto';\r\nimport {Button, IconButton} from \"@mui/material\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (userId: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (data: FormProfileDataType) => void\r\n}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    if (!props.profile) {\r\n        return <Box sx={{display: 'flex'}}>\r\n            <CircularProgress/>\r\n        </Box>\r\n    }\r\n\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: FormProfileDataType) => {\r\n        props.saveProfile(formData)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img\r\n                    src={props.profile.photos?.large ? props.profile.photos.large : userPhoto}\r\n                />\r\n                {/*{props.isOwner && <input type='file' onChange={mainPhotoSelected}/>}*/}\r\n                {props.isOwner && <label>\r\n                    <input type=\"file\"\r\n                           name='photo'\r\n                           onChange={mainPhotoSelected}\r\n                           style={{display: 'none'}}\r\n                    />\r\n                    <IconButton component=\"span\">\r\n                        <AddAPhotoIcon color=\"primary\"/>\r\n                    </IconButton>\r\n                </label>\r\n                }\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWithHooks isOwner={props.isOwner} status={props?.status} updateStatus={props?.updateStatus}/>\r\n            </div>\r\n            {editMode\r\n                ? <div>\r\n                    <ProfileReduxForm initialValues={props.profile} onSubmit={onSubmit}/>\r\n                    <div className={s.button}>\r\n                        <Button variant=\"outlined\" startIcon={<ArrowBackIcon />}\r\n                                onClick={() => {setEditMode(false)}}>\r\n                            go to profile\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/*<button onClick={() => {*/}\r\n                    {/*    setEditMode(false)}}>go to profile</button>*/}\r\n                </div>\r\n                : <div>\r\n                    <ProfileData profile={props.profile}\r\n                                 status={props.status}\r\n                                 updateStatus={props.updateStatus}\r\n                                 isOwner={props.isOwner}\r\n                                 goToEditMode={() => {\r\n                                     setEditMode(true)\r\n                                 }}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ninterface ProfilePropsTypeNew {\r\n    profile: ProfileType | null,\r\n    post: PostsType[]\r\n    messageForNewPost: string\r\n    setUsersProfile: (profile: ProfileType) => void\r\n    isAuth: boolean\r\n    status: string\r\n    updateStatus: (userId: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (data: FormProfileDataType) => void\r\n}\r\n\r\n\r\nconst Profile = (props: ProfilePropsTypeNew) => {\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            {/*<MyPostsContainer/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype ProfileDataType = {\r\n    profile?: ProfileType | null\r\n    status: string\r\n    updateStatus: (userId: string) => void\r\n    goToEditMode: () => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\nconst ProfileData = (props: ProfileDataType) => {\r\n    return <div className={s.profileDataForm}>\r\n        <div>\r\n            <b>Name : </b> {props?.profile?.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a Job : </b> {props?.profile?.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        <div>\r\n            <b>My professional\r\n                skills : </b> {props?.profile?.lookingForAJobDescription ? props.profile.lookingForAJobDescription : \"------\"}\r\n        </div>\r\n        <div>\r\n            <b>About me : </b>{props?.profile?.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts </b>\r\n            {props?.profile?.contacts && Object.keys(props?.profile?.contacts).map(key => {\r\n                const contacts = props?.profile?.contacts! as ContactsType\r\n                return (\r\n                    <Contacts\r\n                        key={key}\r\n                        contactTitle={key}\r\n                        contactValue={contacts[key as keyof ContactsType]}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n\r\n        {props.isOwner && <div>\r\n            {<Button variant=\"outlined\" startIcon={<EditIcon />}\r\n                     onClick={props.goToEditMode}>\r\n                Edit\r\n            </Button>}\r\n        </div>\r\n\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\ntype ContactsType = {\r\n    contactTitle: string\r\n    contactValue?: string | null\r\n}\r\n\r\nconst Contacts = (props: ContactsType) => {\r\n    return (\r\n        <div>\r\n            <b>\r\n                {props.contactTitle}\r\n            </b>\r\n            : {props?.contactValue !== null ? <a href={props?.contactValue} target='_blank'>{props?.contactValue}</a> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport {\r\n    getStatusTC,\r\n    PostsType,\r\n    ProfileType, savePhotoTC, saveProfileTC,\r\n    setUsersProfile,\r\n    setUsersProfileTC,\r\n    updateStatusTC\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStoreRootStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {FormProfileDataType} from \"../../../src/components/Profile/ProfileDataForm\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId as string\r\n            //userId = '28555'\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.setUsersProfileTC(userId)\r\n        this.props.getStatusTC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatusTC}\r\n                         savePhoto={this.props.savePhotoTC}\r\n                         saveProfile={this.props.saveProfileTC}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: ReduxStoreRootStateType): MapStatePropsForRedirectType => ({\r\n    //isAuth: state.auth.isAuth\r\n})\r\n\r\n//AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\r\n\r\n// let AuthRedirectComponent = (props: PropsType) => {\r\n//     if(!props.isAuth) return <Redirect to={'/login'}/>\r\n//     return <ProfileContainer {...props}/>\r\n// }\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    post: Array<PostsType>\r\n    messageForNewPost: string\r\n    profile: null | ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserId: string | null\r\n}\r\n\r\ntype MapStatePropsForRedirectType = {\r\n    // isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUsersProfile: (profile: ProfileType) => void\r\n    setUsersProfileTC: (userId: string) => void\r\n    getStatusTC: (userId: string) => void\r\n    updateStatusTC: (status: string) => void\r\n    savePhotoTC: (file: File) => void\r\n    saveProfileTC: (data: FormProfileDataType) => void\r\n}\r\n\r\ntype ProfilePropsType = MapStatePropsType & MapDispatchPropsType // & MapStatePropsForRedirectType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nlet mapStateToProps = (state: ReduxStoreRootStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    post: state.profilePage.post,\r\n    messageForNewPost: state.profilePage.messageForNewPost,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\n// let AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\n// let WithDataContainerComponent = withRouter(AuthRedirectComponent)\r\n//\r\n// export default connect(mapStateToProps, {\r\n//     setUsersProfile,\r\n//     setUsersProfileTC\r\n// })(WithDataContainerComponent)\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setUsersProfile,\r\n        setUsersProfileTC,\r\n        getStatusTC,\r\n        updateStatusTC,\r\n        savePhotoTC,\r\n        saveProfileTC\r\n    }),\r\n    withRouter,\r\n    // WithAuthRedirect\r\n)(ProfileContainer)","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z\"\n}), 'AddAPhoto');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["props","useState","editeMode","setEditeMode","status","setStatus","useEffect","activateMode","isOwner","className","s","onDoubleClick","Edit","onClick","fontSize","color","TextField","variant","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","renderField","input","label","type","ProfileReduxForm","reduxForm","form","handleSubmit","error","profile","useAppSelector","state","profilePage","onSubmit","style","Field","name","placeholder","defaultValue","fullName","component","validate","required","Input","contacts","Object","keys","map","key","Button","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","overridesResolver","styles","ownerState","root","capitalize","edge","size","theme","_extends","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","children","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","ProfileInfo","editMode","setEditMode","Box","sx","display","CircularProgress","src","photos","large","userPhoto","target","files","length","savePhoto","AddAPhoto","initialValues","formData","saveProfile","startIcon","ArrowBack","ProfileData","goToEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","Contacts","contactTitle","contactValue","href","isAuth","to","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","setUsersProfileTC","getStatusTC","refreshProfile","prevProps","prevState","snapshot","updateStatusTC","savePhotoTC","saveProfileTC","compose","connect","post","messageForNewPost","auth","id","setUsersProfile","withRouter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}